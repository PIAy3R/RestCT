{
  "response1": {
    "id": 6,
    "description": null,
    "name": "awda",
    "name_with_namespace": "Administrator / awda",
    "path": "awda",
    "path_with_namespace": "root/awda",
    "created_at": "2023-11-15T07:06:01.059Z",
    "default_branch": null,
    "tag_list": [],
    "ssh_url_to_repo": "git@gitlab.example.com:root/awda.git",
    "http_url_to_repo": "http://gitlab.example.com/root/awda.git",
    "web_url": "http://gitlab.example.com/root/awda",
    "readme_url": null,
    "avatar_url": null,
    "forks_count": 0,
    "star_count": 0,
    "last_activity_at": "2023-11-15T07:06:01.059Z",
    "namespace": {
      "id": 1,
      "name": "Administrator",
      "path": "root",
      "kind": "user",
      "full_path": "root",
      "parent_id": null,
      "avatar_url": "https://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80&d=identicon",
      "web_url": "http://gitlab.example.com/root"
    },
    "_links": {
      "self": "http://gitlab.example.com/api/v4/projects/6",
      "issues": "http://gitlab.example.com/api/v4/projects/6/issues",
      "merge_requests": "http://gitlab.example.com/api/v4/projects/6/merge_requests",
      "repo_branches": "http://gitlab.example.com/api/v4/projects/6/repository/branches",
      "labels": "http://gitlab.example.com/api/v4/projects/6/labels",
      "events": "http://gitlab.example.com/api/v4/projects/6/events",
      "members": "http://gitlab.example.com/api/v4/projects/6/members"
    },
    "packages_enabled": true,
    "empty_repo": true,
    "archived": false,
    "visibility": "private",
    "owner": {
      "id": 1,
      "name": "Administrator",
      "username": "root",
      "state": "active",
      "avatar_url": "https://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80&d=identicon",
      "web_url": "http://gitlab.example.com/root"
    },
    "resolve_outdated_diff_discussions": false,
    "container_registry_enabled": true,
    "container_expiration_policy": {
      "cadence": "1d",
      "enabled": false,
      "keep_n": 10,
      "older_than": "90d",
      "name_regex": ".*",
      "name_regex_keep": null,
      "next_run_at": "2023-11-16T07:06:01.159Z"
    },
    "issues_enabled": true,
    "merge_requests_enabled": true,
    "wiki_enabled": true,
    "jobs_enabled": true,
    "snippets_enabled": true,
    "service_desk_enabled": false,
    "service_desk_address": null,
    "can_create_merge_request_in": true,
    "issues_access_level": "enabled",
    "repository_access_level": "enabled",
    "merge_requests_access_level": "enabled",
    "forking_access_level": "enabled",
    "wiki_access_level": "enabled",
    "builds_access_level": "enabled",
    "snippets_access_level": "enabled",
    "pages_access_level": "private",
    "operations_access_level": "enabled",
    "analytics_access_level": "enabled",
    "emails_disabled": null,
    "shared_runners_enabled": true,
    "lfs_enabled": true,
    "creator_id": 1,
    "import_status": "none",
    "import_error": null,
    "open_issues_count": 0,
    "runners_token": "WiH2Sb2zBVQm6tvCzNx_",
    "ci_default_git_depth": 50,
    "ci_forward_deployment_enabled": true,
    "public_jobs": true,
    "build_git_strategy": "fetch",
    "build_timeout": 3600,
    "auto_cancel_pending_pipelines": "enabled",
    "build_coverage_regex": null,
    "ci_config_path": null,
    "shared_with_groups": [],
    "only_allow_merge_if_pipeline_succeeds": false,
    "allow_merge_on_skipped_pipeline": null,
    "restrict_user_defined_variables": false,
    "request_access_enabled": true,
    "only_allow_merge_if_all_discussions_are_resolved": false,
    "remove_source_branch_after_merge": true,
    "printing_merge_request_link_enabled": true,
    "merge_method": "merge",
    "suggestion_commit_message": null,
    "auto_devops_enabled": true,
    "auto_devops_deploy_strategy": "continuous",
    "autoclose_referenced_issues": true,
    "repository_storage": "default"
  },
  "response2": {
    "message": {
      "template_name": [
        "'wadf2qaa' is unknown or invalid"
      ],
      "limit_reached": []
    }
  },
  "response3": {
    "message": {
      "name": [
        "has already been taken"
      ],
      "path": [
        "has already been taken"
      ],
      "limit_reached": []
    }
  }
}

